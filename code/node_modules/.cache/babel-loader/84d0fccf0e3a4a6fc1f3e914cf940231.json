{"ast":null,"code":"// import axios from 'axios'\n// const request = axios.create({\n//     baseURL: 'http://192.168.1.90:8080',\n//     timeout: 5000 // 5秒超时时间，无响应直接判断超时\n// })\n// // request.interceptors.request.use(\n// //     function(config){\n// //         return config\n// //     },\n// //     function(error){\n// //         return Promise.reject(error)\n// //     }\n// // )\n// // request.interceptors.response.use(\n// //     function(response){\n// //         return response\n// //     },\n// //     function(error){\n// //         return Promise.reject(error)\n// //     }\n// // )\n// export default request\n// import axios from 'axios'\n// axios.defaults.baseURL = 'http://192.168.1.90:8080' // 备用接口\n// axios.defaults.timeout = 3000\n// axios.interceptors.request.use(\n//   function (config) {\n//     return config\n//   },\n//   function (error) {\n//     return Promise.reject(error)\n//   }\n// )\n// const Request = {\n//     get: function (path = '', data = {}) {\n//       return new Promise(function (resolve, reject) {\n//         axios\n//           .get(path, { params: data })\n//           .then(function (response) {\n//             resolve(response)\n//           })\n//           .catch(function (error) {\n//             reject(error)\n//           })\n//       })\n//     },\n//     post: function (path = '', data = {}) {\n//       return new Promise(function (resolve, reject) {\n//         axios\n//           .post(path, data)\n//           .then(function (response) {\n//             resolve(response)\n//           })\n//           .catch(function (error) {\n//             reject(error)\n//           })\n//       })\n//     },\n//     all: function (list) {\n//       return new Promise(function (resolve, reject) {\n//         axios\n//           .all(list)\n//           .then(\n//             axios.spread(function (...result) {\n//               resolve(result)\n//             })\n//           )\n//           .catch(function (error) {\n//             reject(error)\n//           })\n//       })\n//     },\n//     patch: function (path = '', data = {}) {\n//       return new Promise(function (resolve, reject) {\n//         axios\n//           .patch(path, data)\n//           .then(function (response) {\n//             resolve(response)\n//           })\n//           .catch(function (error) {\n//             reject(error)\n//           })\n//       })\n//     }\n//   }\n// export default Request","map":{"version":3,"names":[],"sources":["D:/project/技术学习/crm/src/api/request.js"],"sourcesContent":["// import axios from 'axios'\r\n\r\n// const request = axios.create({\r\n//     baseURL: 'http://192.168.1.90:8080',\r\n//     timeout: 5000 // 5秒超时时间，无响应直接判断超时\r\n// })\r\n\r\n// // request.interceptors.request.use(\r\n// //     function(config){\r\n// //         return config\r\n// //     },\r\n// //     function(error){\r\n// //         return Promise.reject(error)\r\n// //     }\r\n// // )\r\n// // request.interceptors.response.use(\r\n// //     function(response){\r\n// //         return response\r\n// //     },\r\n// //     function(error){\r\n// //         return Promise.reject(error)\r\n// //     }\r\n// // )\r\n\r\n\r\n// export default request\r\n// import axios from 'axios'\r\n\r\n// axios.defaults.baseURL = 'http://192.168.1.90:8080' // 备用接口\r\n// axios.defaults.timeout = 3000\r\n\r\n// axios.interceptors.request.use(\r\n//   function (config) {\r\n//     return config\r\n//   },\r\n//   function (error) {\r\n//     return Promise.reject(error)\r\n//   }\r\n// )\r\n\r\n// const Request = {\r\n//     get: function (path = '', data = {}) {\r\n//       return new Promise(function (resolve, reject) {\r\n//         axios\r\n//           .get(path, { params: data })\r\n//           .then(function (response) {\r\n//             resolve(response)\r\n//           })\r\n//           .catch(function (error) {\r\n//             reject(error)\r\n//           })\r\n//       })\r\n//     },\r\n//     post: function (path = '', data = {}) {\r\n//       return new Promise(function (resolve, reject) {\r\n//         axios\r\n//           .post(path, data)\r\n//           .then(function (response) {\r\n//             resolve(response)\r\n//           })\r\n//           .catch(function (error) {\r\n//             reject(error)\r\n//           })\r\n//       })\r\n//     },\r\n//     all: function (list) {\r\n//       return new Promise(function (resolve, reject) {\r\n//         axios\r\n//           .all(list)\r\n//           .then(\r\n//             axios.spread(function (...result) {\r\n//               resolve(result)\r\n//             })\r\n//           )\r\n//           .catch(function (error) {\r\n//             reject(error)\r\n//           })\r\n//       })\r\n//     },\r\n//     patch: function (path = '', data = {}) {\r\n//       return new Promise(function (resolve, reject) {\r\n//         axios\r\n//           .patch(path, data)\r\n//           .then(function (response) {\r\n//             resolve(response)\r\n//           })\r\n//           .catch(function (error) {\r\n//             reject(error)\r\n//           })\r\n//       })\r\n//     }\r\n//   }\r\n\r\n// export default Request"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}