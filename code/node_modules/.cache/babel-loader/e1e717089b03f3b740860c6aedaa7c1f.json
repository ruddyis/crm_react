{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\\\u6280\\u672F\\u5B66\\u4E60\\\\crm\\\\src\\\\pages\\\\Overview\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './style.less';\nimport Drag from '../../components/Drag';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Overview() {\n  _s();\n\n  // 点击更多触发\n  const moreClick = () => {\n    console.log('tell me which num');\n  }; // 点击待处理触发\n\n\n  const clickPendingNum = () => {\n    console.log('overview 点击待处理数量');\n  }; // 改变位置提示条的显隐\n\n\n  const [moveHoverOrder, setMoveHoverOrder] = useState(-1);\n\n  const changeMoveHover = value => {\n    setMoveHoverOrder(value);\n  }; // currentOrder: 被拖拽元素的data-order, targetOrder: 目标元素的data-order\n\n\n  const [sortArr, setSortArr] = useState([0, 1, 2, 3]);\n  var sort1 = sortArr.slice(); // 浅复制数组\n\n  const getTargetOrder = (currentOrder, targetOrder) => {\n    // 拖拽元素在sort1数组中的位置\n    var currentIndex = sort1.indexOf(currentOrder); // 目标元素在sort1中的位置\n\n    var targetIndex = sort1.indexOf(targetOrder);\n\n    if (currentIndex < targetIndex) {\n      // 拖拽元素在前，先增后减\n      sort1.splice(targetIndex + 1, 0, currentOrder);\n      sort1.splice(currentIndex, 1);\n    } else if (currentIndex > targetIndex) {\n      // 目标元素在前，先减后增\n      sort1.splice(currentIndex, 1);\n      sort1.splice(targetIndex + 1, 0, currentOrder);\n    } // 至关重要的一步，不能使用setSortArr(sort1)，否则sortArr指向的内存地址不变，不会立即更新视图\n\n\n    setSortArr([...sort1]);\n  }; // 获取到order对应的类型大小\n\n\n  const getSizeFromOrder = (size, order) => {\n    console.log(size, order)[(optionOne, optionTwo, optionThree, optionFour)].forEach(item => {\n      console.log(item['data-order']);\n    });\n  };\n\n  const [componentsArr, setComponentsArr] = useState([]);\n  useEffect(() => {\n    var oComponentArr = [];\n    sortArr.forEach(item1 => {\n      [optionOne, optionTwo, optionThree, optionFour].forEach(item2 => {\n        item2['data-order'] === item1 && oComponentArr.push(item2);\n      });\n    });\n    setComponentsArr(oComponentArr);\n  }, [sortArr]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overview\",\n    children: componentsArr.map((item, index) => {\n      // return <Drag key={index} options={item} showMoveHover={moveHoverOrder}>{item.childrenNode()}</Drag>\n      return /*#__PURE__*/_jsxDEV(Drag, {\n        options: item,\n        showMoveHover: moveHoverOrder,\n        children: item.childrenNode()\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Overview, \"gzH6SMKYJ+0GCbBT9PsTzLQaGyo=\");\n\n_c = Overview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Overview\");","map":{"version":3,"names":["React","Drag","useState","useEffect","Overview","moreClick","console","log","clickPendingNum","moveHoverOrder","setMoveHoverOrder","changeMoveHover","value","sortArr","setSortArr","sort1","slice","getTargetOrder","currentOrder","targetOrder","currentIndex","indexOf","targetIndex","splice","getSizeFromOrder","size","order","optionOne","optionTwo","optionThree","optionFour","forEach","item","componentsArr","setComponentsArr","oComponentArr","item1","item2","push","map","index","childrenNode"],"sources":["D:/project/技术学习/crm/src/pages/Overview/index.jsx"],"sourcesContent":["import React from 'react';\r\nimport './style.less'\r\nimport Drag from '../../components/Drag'\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default function Overview() {\r\n  // 点击更多触发\r\n  const moreClick = () => {\r\n    console.log('tell me which num')\r\n  }\r\n  // 点击待处理触发\r\n  const clickPendingNum = () => {\r\n    console.log('overview 点击待处理数量')\r\n  }\r\n  // 改变位置提示条的显隐\r\n  const [moveHoverOrder, setMoveHoverOrder] = useState(-1)\r\n  const changeMoveHover = (value) => {\r\n    setMoveHoverOrder(value)\r\n  }\r\n  \r\n  // currentOrder: 被拖拽元素的data-order, targetOrder: 目标元素的data-order\r\n  const [sortArr, setSortArr] = useState([0,1,2,3])\r\n  var sort1 = sortArr.slice() // 浅复制数组\r\n  const getTargetOrder = (currentOrder, targetOrder) => {\r\n    // 拖拽元素在sort1数组中的位置\r\n    var currentIndex = sort1.indexOf(currentOrder)\r\n    // 目标元素在sort1中的位置\r\n    var targetIndex = sort1.indexOf(targetOrder)\r\n    if(currentIndex < targetIndex){\r\n      // 拖拽元素在前，先增后减\r\n      sort1.splice(targetIndex+1, 0, currentOrder)\r\n      sort1.splice(currentIndex,1)\r\n    }else if(currentIndex > targetIndex){ // 目标元素在前，先减后增\r\n      sort1.splice(currentIndex,1)\r\n      sort1.splice(targetIndex+1, 0, currentOrder)\r\n    }\r\n    // 至关重要的一步，不能使用setSortArr(sort1)，否则sortArr指向的内存地址不变，不会立即更新视图\r\n    setSortArr([...sort1])\r\n  }\r\n\r\n  // 获取到order对应的类型大小\r\n  const getSizeFromOrder = (size, order) => {\r\n    console.log(size, order)\r\n    [optionOne, optionTwo, optionThree, optionFour].forEach((item) => {\r\n      console.log(item['data-order'])\r\n    })\r\n  }\r\n\r\n  \r\n  const [componentsArr, setComponentsArr] = useState([]) \r\n  useEffect(() => {\r\n    var oComponentArr = []\r\n    sortArr.forEach((item1) => {\r\n      [optionOne, optionTwo, optionThree, optionFour].forEach((item2) => {\r\n        item2['data-order'] === item1 && oComponentArr.push(item2)\r\n      })\r\n    })\r\n    setComponentsArr(oComponentArr)\r\n  }, [sortArr]) // eslint-disable-line react-hooks/exhaustive-deps\r\n \r\n\r\n  return (\r\n    <div className=\"overview\">\r\n      {\r\n        componentsArr.map((item, index) => {\r\n            // return <Drag key={index} options={item} showMoveHover={moveHoverOrder}>{item.childrenNode()}</Drag>\r\n            return <Drag \r\n              key={index} \r\n              options={item} \r\n              showMoveHover={moveHoverOrder}\r\n              >{item.childrenNode()}</Drag>\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}